#!/usr/bin/env python
# coding: utf-8
import os
import json

from docopt import docopt

doc = """Ubik update db.
Be careful, this cli tool is special develop for Canopsis.

Usage:
  ubik-updatedb [--old-db=<path>] [--new-db=<path>]
  ubik-updatedb -h | --help
  ubik-updatedb -v | --version

Options:
  --old-db=<path>   Path to old database [default: /opt/canopsis/var/lib/pkgmgr/local_db]
  --new-db=<path>   Path to new database [default: /opt/canopsis/var/lib/ubik/packages.db]
  -h --help         Show help.
  -v --version      Show version.
"""

if __name__ == '__main__':
	args = docopt(doc, version="0.0.1")
	print(' :: Convert old packages database')

	new_db = args.get('--new-db')
	old_db = args.get('--old-db')

	if os.path.exists(new_db):
		os.rename(new_db, "%s.back" % new_db)

	if not os.path.exists(new_db):
		open(new_db, 'w').close()

	new_db_file = open(new_db, 'w')
	_json = []
	with open(old_db) as old_db_file:
		for line in old_db_file.readlines():
			info = {'name'	 : line.split('|')[0],
					'version': line.split('|')[1].split('-')[0],
					'release': line.split('|')[1].split('-')[-1],
					'status' : "20",
					'md5'	 : line.split('|')[3],
					'deps'	 : line.split('|')[4].split(),
					'arch'	 : line.split('|')[5],
					'dist'	 : line.split('|')[6],
					'vers'	 : line.split('|')[7]}
			_json.append(info)
	
	json.dump(_json, new_db_file)	
	os.rename(old_db, '%s.old' % old_db)